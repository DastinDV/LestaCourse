#version 330 core
                          
in vec3 out_position;

out vec4 FragColor;

uniform vec2 u_windowSize;
uniform float u_time;
//uniform factor;

vec3 palette(float t){
    vec3 a = vec3(0.5, 0.5, 0.5);
    vec3 b = vec3(0.5, 0.5, 0.5);
    vec3 c = vec3(1.0, 1.0, 1.0);
    vec3 d = vec3(0.263, 0.416, 0.557);

    return a + b * cos(6.28318 * (c * t + d));
}

void main()
{
    // normalize exit object to [0;1]
    float val = 1 / 32.0;

    float uvX = (gl_FragCoord.x - 160.0) * val;
    float uvY = (gl_FragCoord.y - 416.0) * val;
    vec2 uv = vec2(uvX, uvY);

    uv = uv - 0.5;
    uv = uv * 2;

    float d = length(uv);

    vec3 color = palette(d + u_time);
    d = sin(d * 8. + u_time)/8.;
    d = abs(d);
    d = 0.02 / d;

    color *= d;
    FragColor = vec4(color, 1.0);
}

