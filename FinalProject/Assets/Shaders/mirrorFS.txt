#version 330 core
                          
in vec3 out_position;
in vec3 out_translate;

out vec4 FragColor;

uniform vec2 u_windowSize;
uniform float u_time;
uniform vec2 u_tileCoordinate;
uniform float u_tileSize;
uniform int u_mirrorType;

float remap( float minval, float maxval, float curval )
{
    return ( curval - minval ) / ( maxval - minval );
} 

void main()
{
    float aspectRatio =  u_windowSize.x / u_windowSize.y;
    float targetAR = 640.0 / 480.0;
    float factor = 1.0;

    float translateX = 0.0;
    float translateY = 0.0;
    float posX = u_tileCoordinate.x;
    float posY = 480.0 - u_tileCoordinate.y;
    float sizeX = u_tileSize;
    float sizeY = u_tileSize;

    if (aspectRatio >= targetAR){
        factor = aspectRatio / targetAR;
        translateX = ((factor * 640.0)- 640.0) / 2.0;
        posX = (posX + translateX) / (640.0 * factor);
        posY = posY / 480.0;
        sizeX = sizeX / (640.0 * factor);
        sizeY = sizeY / 480.0;
    } else {
        factor = targetAR / aspectRatio;
        translateY = ((factor * 480.0) - 480.0) / 2.0;
        posX = posX / 640.0;
        posY = (posY + translateY) / (480.0 * factor);
        sizeX = sizeX / 640.0;
        sizeY = sizeY / (480.0 * factor);
    }

    vec2 uv = gl_FragCoord.xy / u_windowSize.xy;

    float uvX = ( uv.x - posX ) * 1.0 / sizeX; 
    float uvY = ( uv.y - posY ) * 1.0 / sizeY;

    vec2 uvTile = vec2(uvX, uvY);

    uvTile = uvTile - 0.5;
    uvTile = uvTile * 2.0;

    vec3 colBlue = vec3(0.0, 0.0, 1.0);
    vec3 neonBlue = vec3(0.0, 1.0, 1.0);
    vec3 colWhite = vec3(1.0, 1.0, 1.0);

    vec3 col = vec3(0.0);

    if (u_mirrorType == 3){
        if (uvTile.x >= -0.25 && uvTile.x <= 0.0){
            col = mix(colBlue, colWhite, remap(-0.25, 0.0, uvTile.x)); 
            FragColor = vec4(col, 1.0);
        } else if (uvTile.x >= 0.0 && uvTile.x <= 0.25){
            col = mix(colWhite, colBlue, remap(0.0, 0.25, uvTile.x));
            FragColor = vec4(col, 1.0);
        }
        else
            FragColor = vec4(0.0, 0.0, 0.0, 1.0);
    } else {
       if (uvTile.y >= -0.25 && uvTile.y <= 0.0){
            col = mix(colBlue, colWhite, remap(-0.25, 0.0, uvTile.y)); 
            FragColor = vec4(col, 1.0);
        } else if (uvTile.y >= 0.0 && uvTile.y <= 0.25){
            col = mix(colWhite, colBlue, remap(0.0, 0.25, uvTile.y));
            FragColor = vec4(col, 1.0);
        }
        else
            FragColor = vec4(0.0, 0.0, 0.0, 1.0);
    }

    if (uvTile.x <= -0.95 || uvTile.x >= 0.95){
        FragColor = vec4(neonBlue, 1.0);
    }
    if (uvTile.y <= -0.95 || uvTile.y >= 0.95){
        FragColor =  vec4(neonBlue, 1.0);
    }
}
